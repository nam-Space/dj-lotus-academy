// <auto-generated />
using System;
using DJ_UseCaseLayer.DAO;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DJUseCaseLayer.Migrations
{
    [DbContext(typeof(LAContext))]
    [Migration("20230213074801_latest")]
    partial class latest
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Business.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActiveRealTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AttendanceTypeStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ComfirmDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeComfirmId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsLate")
                        .HasColumnType("bit");

                    b.Property<int?>("LateMinuteTotal")
                        .HasColumnType("int");

                    b.Property<int?>("StudentLAId")
                        .HasColumnType("int");

                    b.Property<string>("UnactiveReason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AttendanceTypeStatusId");

                    b.HasIndex("EmployeeComfirmId");

                    b.HasIndex("StudentLAId");

                    b.ToTable("attendance");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Business.EmployeeLAHoliday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmployeeLAId")
                        .HasColumnType("int");

                    b.Property<int?>("HolidayId")
                        .HasColumnType("int");

                    b.Property<int?>("IsSalary")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDay")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeLAId");

                    b.HasIndex("HolidayId");

                    b.ToTable("employeeLAHolidays");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Business.Holiday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CloseDay")
                        .HasColumnType("int");

                    b.Property<int?>("CloseMonth")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeLACreateId")
                        .HasColumnType("int");

                    b.Property<string>("HolidayDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HolidayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HolidayStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("OpenDay")
                        .HasColumnType("int");

                    b.Property<int?>("OpenMonth")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDay")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeLACreateId");

                    b.HasIndex("HolidayStatusId");

                    b.ToTable("holidays");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Business.Intern", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CloseDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeLeadId")
                        .HasColumnType("int");

                    b.Property<int?>("InternStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OpenDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StudentSlot")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeLeadId");

                    b.HasIndex("InternStatusId");

                    b.ToTable("interns");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Business.InternTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmployeeLAConfirmId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeLAEmployeeConfirmId")
                        .HasColumnType("int");

                    b.Property<double?>("EvaluateScore")
                        .HasColumnType("float");

                    b.Property<int?>("InternId")
                        .HasColumnType("int");

                    b.Property<string>("LeadEvaluate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentLAId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeLAEmployeeConfirmId");

                    b.HasIndex("InternId");

                    b.HasIndex("StudentLAId");

                    b.ToTable("internTasks");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Business.Reserve", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CloseTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DateDiff")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeComfirmId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OpenTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReserveReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentLAId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeComfirmId");

                    b.HasIndex("StudentLAId");

                    b.ToTable("reserves");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Business.StudentCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CloseCourse")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CourseLAId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OpenCourse")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StudentLAId")
                        .HasColumnType("int");

                    b.Property<int?>("SupportMonth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseLAId");

                    b.HasIndex("StudentLAId");

                    b.ToTable("studentCourses");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Business.StudentEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChangeReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeLAId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SetMentorDatetime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SortNumber")
                        .HasColumnType("int");

                    b.Property<int?>("StudentLAId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeLAId");

                    b.HasIndex("StudentLAId");

                    b.ToTable("studentEmployees");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Business.StudentLACourseLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CloseCourse")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CourseLessonId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeEvaluate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeLAComfirmId")
                        .HasColumnType("int");

                    b.Property<string>("LinkStudentTest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OpenCourse")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Score")
                        .HasColumnType("float");

                    b.Property<int?>("StudentLAId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseLessonId");

                    b.HasIndex("EmployeeLAComfirmId");

                    b.HasIndex("StudentLAId");

                    b.ToTable("studentLACourseLessons");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Business.StudentLAHoliday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("HolidayId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentLAId")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDay")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HolidayId");

                    b.HasIndex("StudentLAId");

                    b.ToTable("studentLAHolidays");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Business.StudentLAIntern", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("InternId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("JoinDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StudentLAId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InternId");

                    b.HasIndex("StudentLAId");

                    b.ToTable("studentLAInterns");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Courses.CourseLA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CourseLACode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseLAName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CourseLAPrice")
                        .HasColumnType("float");

                    b.Property<int?>("CourseStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("SupportMonth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseStatusId");

                    b.ToTable("courses");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Courses.CourseLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CourseLAId")
                        .HasColumnType("int");

                    b.Property<string>("CourseLessonCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseLessonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CourseLessonStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("SortNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseLAId");

                    b.HasIndex("CourseLessonStatusId");

                    b.ToTable("courseLessons");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Employee.EmployeeLA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DistrictCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EmployeeLABirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeLAName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeLAPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeLAUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeStatusId")
                        .HasColumnType("int");

                    b.Property<string>("FacebookUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("NumberPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvinceCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SkyUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WardCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictCode");

                    b.HasIndex("EmployeeRoleId");

                    b.HasIndex("EmployeeStatusId");

                    b.HasIndex("GenderId");

                    b.HasIndex("ProvinceCode");

                    b.HasIndex("WardCode");

                    b.ToTable("employeeLA");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Employee.EmployeeRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmployeeRoleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeRoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("employeeRoles");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Properties.Address.AdministrativeRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("code_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code_name_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_en")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("administrative_regions");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Properties.Address.AdministrativeUnits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("code_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code_name_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("short_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("short_name_en")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("administrative_units");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Properties.Address.District", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("administrative_unit_id")
                        .HasColumnType("int");

                    b.Property<string>("code_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("province_code")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("code");

                    b.HasIndex("administrative_unit_id");

                    b.HasIndex("province_code");

                    b.ToTable("districts");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Properties.Address.Province", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("administrative_region_id")
                        .HasColumnType("int");

                    b.Property<int?>("administrative_unit_id")
                        .HasColumnType("int");

                    b.Property<string>("code_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_en")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("code");

                    b.HasIndex("administrative_region_id");

                    b.HasIndex("administrative_unit_id");

                    b.ToTable("provinces");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Properties.Address.Ward", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("administrative_unit_id")
                        .HasColumnType("int");

                    b.Property<string>("code_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("district_code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("full_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_en")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("code");

                    b.HasIndex("administrative_unit_id");

                    b.HasIndex("district_code");

                    b.ToTable("wards");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Properties.AttendanceTypeStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AttendanceTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttendanceTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("attendanceTypeStatuses");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Properties.CourseLessonStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CourseLessonStatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseLessonStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("courseLessonStatuses");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Properties.CourseStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CourseStatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("courseStatuses");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Properties.EmployeeStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmployeeStatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("employeeStatuses");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Properties.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GenderCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenderName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("genders");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Properties.HolidayStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HolidayCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HolidayName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("holidayStatuses");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Properties.InternStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("InternStatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("internStatuses");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Properties.StudentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StudentStatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("studentStatuses");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Student.StudentLA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateAccountDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DistrictCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<float?>("HolidayTotal")
                        .HasColumnType("real");

                    b.Property<string>("InsightName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LateMinuteTotal")
                        .HasColumnType("int");

                    b.Property<string>("ProvinceCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float?>("ReserveTotal")
                        .HasColumnType("real");

                    b.Property<int?>("SaleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StudentLABirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("StudentLAName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentLAPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentLASdt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentLAUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("UnactiveTotal")
                        .HasColumnType("int");

                    b.Property<float?>("UnauthorizedAbsencesTotal")
                        .HasColumnType("real");

                    b.Property<string>("WardCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictCode");

                    b.HasIndex("GenderId");

                    b.HasIndex("ProvinceCode");

                    b.HasIndex("SaleId");

                    b.HasIndex("StudentStatusId");

                    b.HasIndex("WardCode");

                    b.ToTable("studentLAs");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Business.Attendance", b =>
                {
                    b.HasOne("DJ_WebDesignCore.Entites.Properties.AttendanceTypeStatus", "AttendanceTypeStatus")
                        .WithMany()
                        .HasForeignKey("AttendanceTypeStatusId");

                    b.HasOne("DJ_WebDesignCore.Entites.Employee.EmployeeLA", "EmployeeComfirm")
                        .WithMany()
                        .HasForeignKey("EmployeeComfirmId");

                    b.HasOne("DJ_WebDesignCore.Entites.Student.StudentLA", "StudentLA")
                        .WithMany()
                        .HasForeignKey("StudentLAId");

                    b.Navigation("AttendanceTypeStatus");

                    b.Navigation("EmployeeComfirm");

                    b.Navigation("StudentLA");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Business.EmployeeLAHoliday", b =>
                {
                    b.HasOne("DJ_WebDesignCore.Entites.Employee.EmployeeLA", "EmployeeLA")
                        .WithMany()
                        .HasForeignKey("EmployeeLAId");

                    b.HasOne("DJ_WebDesignCore.Entites.Business.Holiday", "Holiday")
                        .WithMany()
                        .HasForeignKey("HolidayId");

                    b.Navigation("EmployeeLA");

                    b.Navigation("Holiday");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Business.Holiday", b =>
                {
                    b.HasOne("DJ_WebDesignCore.Entites.Employee.EmployeeLA", "EmployeeLACreate")
                        .WithMany()
                        .HasForeignKey("EmployeeLACreateId");

                    b.HasOne("DJ_WebDesignCore.Entites.Properties.HolidayStatus", "HolidayStatus")
                        .WithMany()
                        .HasForeignKey("HolidayStatusId");

                    b.Navigation("EmployeeLACreate");

                    b.Navigation("HolidayStatus");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Business.Intern", b =>
                {
                    b.HasOne("DJ_WebDesignCore.Entites.Employee.EmployeeLA", "EmployeeLead")
                        .WithMany()
                        .HasForeignKey("EmployeeLeadId");

                    b.HasOne("DJ_WebDesignCore.Entites.Properties.InternStatus", "InternStatus")
                        .WithMany()
                        .HasForeignKey("InternStatusId");

                    b.Navigation("EmployeeLead");

                    b.Navigation("InternStatus");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Business.InternTask", b =>
                {
                    b.HasOne("DJ_WebDesignCore.Entites.Employee.EmployeeLA", "EmployeeLAEmployeeConfirm")
                        .WithMany()
                        .HasForeignKey("EmployeeLAEmployeeConfirmId");

                    b.HasOne("DJ_WebDesignCore.Entites.Business.Intern", "Intern")
                        .WithMany()
                        .HasForeignKey("InternId");

                    b.HasOne("DJ_WebDesignCore.Entites.Student.StudentLA", "StudentLA")
                        .WithMany()
                        .HasForeignKey("StudentLAId");

                    b.Navigation("EmployeeLAEmployeeConfirm");

                    b.Navigation("Intern");

                    b.Navigation("StudentLA");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Business.Reserve", b =>
                {
                    b.HasOne("DJ_WebDesignCore.Entites.Employee.EmployeeLA", "EmployeeComfirm")
                        .WithMany()
                        .HasForeignKey("EmployeeComfirmId");

                    b.HasOne("DJ_WebDesignCore.Entites.Student.StudentLA", "StudentLA")
                        .WithMany()
                        .HasForeignKey("StudentLAId");

                    b.Navigation("EmployeeComfirm");

                    b.Navigation("StudentLA");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Business.StudentCourse", b =>
                {
                    b.HasOne("DJ_WebDesignCore.Entites.Courses.CourseLA", "CourseLA")
                        .WithMany()
                        .HasForeignKey("CourseLAId");

                    b.HasOne("DJ_WebDesignCore.Entites.Student.StudentLA", "StudentLA")
                        .WithMany("studentCourses")
                        .HasForeignKey("StudentLAId");

                    b.Navigation("CourseLA");

                    b.Navigation("StudentLA");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Business.StudentEmployee", b =>
                {
                    b.HasOne("DJ_WebDesignCore.Entites.Employee.EmployeeLA", "EmployeeLA")
                        .WithMany()
                        .HasForeignKey("EmployeeLAId");

                    b.HasOne("DJ_WebDesignCore.Entites.Student.StudentLA", "StudentLA")
                        .WithMany()
                        .HasForeignKey("StudentLAId");

                    b.Navigation("EmployeeLA");

                    b.Navigation("StudentLA");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Business.StudentLACourseLesson", b =>
                {
                    b.HasOne("DJ_WebDesignCore.Entites.Courses.CourseLesson", "CourseLesson")
                        .WithMany()
                        .HasForeignKey("CourseLessonId");

                    b.HasOne("DJ_WebDesignCore.Entites.Employee.EmployeeLA", "EmployeeLAComfirm")
                        .WithMany()
                        .HasForeignKey("EmployeeLAComfirmId");

                    b.HasOne("DJ_WebDesignCore.Entites.Student.StudentLA", "StudentLA")
                        .WithMany()
                        .HasForeignKey("StudentLAId");

                    b.Navigation("CourseLesson");

                    b.Navigation("EmployeeLAComfirm");

                    b.Navigation("StudentLA");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Business.StudentLAHoliday", b =>
                {
                    b.HasOne("DJ_WebDesignCore.Entites.Business.Holiday", "Holiday")
                        .WithMany()
                        .HasForeignKey("HolidayId");

                    b.HasOne("DJ_WebDesignCore.Entites.Student.StudentLA", "StudentLA")
                        .WithMany()
                        .HasForeignKey("StudentLAId");

                    b.Navigation("Holiday");

                    b.Navigation("StudentLA");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Business.StudentLAIntern", b =>
                {
                    b.HasOne("DJ_WebDesignCore.Entites.Business.Intern", "Intern")
                        .WithMany()
                        .HasForeignKey("InternId");

                    b.HasOne("DJ_WebDesignCore.Entites.Student.StudentLA", "StudentLA")
                        .WithMany()
                        .HasForeignKey("StudentLAId");

                    b.Navigation("Intern");

                    b.Navigation("StudentLA");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Courses.CourseLA", b =>
                {
                    b.HasOne("DJ_WebDesignCore.Entites.Properties.CourseStatus", "CourseStatus")
                        .WithMany()
                        .HasForeignKey("CourseStatusId");

                    b.Navigation("CourseStatus");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Courses.CourseLesson", b =>
                {
                    b.HasOne("DJ_WebDesignCore.Entites.Courses.CourseLA", "CourseLA")
                        .WithMany()
                        .HasForeignKey("CourseLAId");

                    b.HasOne("DJ_WebDesignCore.Entites.Properties.CourseLessonStatus", "CourseLessonStatus")
                        .WithMany()
                        .HasForeignKey("CourseLessonStatusId");

                    b.Navigation("CourseLA");

                    b.Navigation("CourseLessonStatus");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Employee.EmployeeLA", b =>
                {
                    b.HasOne("DJ_WebDesignCore.Entites.Properties.Address.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictCode");

                    b.HasOne("DJ_WebDesignCore.Entites.Employee.EmployeeRole", "EmployeeRole")
                        .WithMany()
                        .HasForeignKey("EmployeeRoleId");

                    b.HasOne("DJ_WebDesignCore.Entites.Properties.EmployeeStatus", "EmployeeStatus")
                        .WithMany()
                        .HasForeignKey("EmployeeStatusId");

                    b.HasOne("DJ_WebDesignCore.Entites.Properties.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("DJ_WebDesignCore.Entites.Properties.Address.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceCode");

                    b.HasOne("DJ_WebDesignCore.Entites.Properties.Address.Ward", "Ward")
                        .WithMany()
                        .HasForeignKey("WardCode");

                    b.Navigation("District");

                    b.Navigation("EmployeeRole");

                    b.Navigation("EmployeeStatus");

                    b.Navigation("Gender");

                    b.Navigation("Province");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Properties.Address.District", b =>
                {
                    b.HasOne("DJ_WebDesignCore.Entites.Properties.Address.AdministrativeUnits", "AdministrativeUnit")
                        .WithMany()
                        .HasForeignKey("administrative_unit_id");

                    b.HasOne("DJ_WebDesignCore.Entites.Properties.Address.Province", "Province")
                        .WithMany()
                        .HasForeignKey("province_code");

                    b.Navigation("AdministrativeUnit");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Properties.Address.Province", b =>
                {
                    b.HasOne("DJ_WebDesignCore.Entites.Properties.Address.AdministrativeRegion", "AdministrativeRegion")
                        .WithMany()
                        .HasForeignKey("administrative_region_id");

                    b.HasOne("DJ_WebDesignCore.Entites.Properties.Address.AdministrativeUnits", "AdministrativeUnit")
                        .WithMany()
                        .HasForeignKey("administrative_unit_id");

                    b.Navigation("AdministrativeRegion");

                    b.Navigation("AdministrativeUnit");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Properties.Address.Ward", b =>
                {
                    b.HasOne("DJ_WebDesignCore.Entites.Properties.Address.AdministrativeUnits", "AdministrativeUnit")
                        .WithMany()
                        .HasForeignKey("administrative_unit_id");

                    b.HasOne("DJ_WebDesignCore.Entites.Properties.Address.District", "District")
                        .WithMany()
                        .HasForeignKey("district_code");

                    b.Navigation("AdministrativeUnit");

                    b.Navigation("District");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Student.StudentLA", b =>
                {
                    b.HasOne("DJ_WebDesignCore.Entites.Properties.Address.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictCode");

                    b.HasOne("DJ_WebDesignCore.Entites.Properties.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("DJ_WebDesignCore.Entites.Properties.Address.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceCode");

                    b.HasOne("DJ_WebDesignCore.Entites.Employee.EmployeeLA", "Sale")
                        .WithMany()
                        .HasForeignKey("SaleId");

                    b.HasOne("DJ_WebDesignCore.Entites.Properties.StudentStatus", "StudentStatus")
                        .WithMany()
                        .HasForeignKey("StudentStatusId");

                    b.HasOne("DJ_WebDesignCore.Entites.Properties.Address.Ward", "Ward")
                        .WithMany()
                        .HasForeignKey("WardCode");

                    b.Navigation("District");

                    b.Navigation("Gender");

                    b.Navigation("Province");

                    b.Navigation("Sale");

                    b.Navigation("StudentStatus");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("DJ_WebDesignCore.Entites.Student.StudentLA", b =>
                {
                    b.Navigation("studentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
